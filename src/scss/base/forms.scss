// This is base reset for form elements.
//
// Note: If you use a framework that includes form styling then you need to remove this file.

form,
fieldset {
  margin: 0;
  padding: 0;
  border-style: none;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
input[type='number'],
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border-radius: 0;
  outline: none;
  appearance: none;
  box-sizing: border-box;
  border: 1px solid map-get($forms, 'form-element-border-color');
  padding: map-get($forms, 'form-element-padding');
  font-family: map-get($forms, 'base-font');

  &:focus {
    border-color: map-get($forms, 'form-element-focus-border-color');
  }

  @include placeholder {
    color: map-get($forms, 'input-color');
  }
}

select {
  -webkit-border-radius: 0;
  border-radius: 0;
}

textarea {
  resize: vertical;
  vertical-align: top;
}

button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
  font-family: map-get($forms, 'base-font');
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border-radius: 0;
  cursor: pointer;
}

//RESET INPUTS STYLES
//input type search remove clear button
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  appearance: none;
}

//number remove arrow
input[type="number"] {

  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type=number] {
    -moz-appearance: textfield;
  }
}


//hide placeholder on focus
input:focus::-webkit-input-placeholder {
  color: transparent;
}

input:focus::-moz-placeholder {
  color: transparent;
}

input:focus::-moz-placeholder {
  color: transparent;
}

input:focus::-ms-input-placeholder {
  color: transparent;
}

input:focus::placeholder {
  color: transparent;
}

.form {
  &__group {
    display: flex;
    flex-direction: column;

    &.hidden {
      height: 0;
      opacity: 0;
      overflow: hidden;
      min-height: 0;
      margin-bottom: 0;
    }

    &.has-error {
      .form__error-text {
        opacity: 1;
        margin-top: 0;
      }

      .form__input {
        border: 2px solid map-get($color, 'error');
      }
    }

    .form__error-text {
      color: map-get($color, 'error');
      opacity: 0;
      margin-top: 0;
    }

    // .help-block {
    //   margin: 0;
    // }
  }

  .input {
    background-color: map-get($color, 'input-bg');
    border-radius: rem(16);
    letter-spacing: 0.5px;
    font-size: rem(15);
    line-height: 1.4;
    color: map-get($color, 'grey-light');
    font-weight: map-get($text, 'regular');
    padding: rem(20) rem(24);
    width: 100%;
    border: transparent;
    transition: map-get($base, 'base-transition');

    &::placeholder {
      color: map-get($color, 'grey-light');
      font-size: rem(15);
      letter-spacing: 0.5px;
      opacity: 0.5;
    }

    &:hover {
      background-color: map-get($color, 'grey-hover');
    }

    &:focus {
      border: 1px solid rgba(196, 196, 196, 0.5);
      background: rgba(196, 196, 196, 0.15);
    }

    &.error {
      border: 1px solid map-get($color, 'error');
    }
  }

  .massege-error {
    display: none;
    color: map-get($color, 'error');
    letter-spacing: 1px;
    text-transform: uppercase;
    font-weight: map-get($text, 'bold');
    font-size: rem(10);
    line-height: 1.6;
    padding-top: rem(10);
    padding-left: rem(15);

    &.visible {
      display: block;
    }
  }
}